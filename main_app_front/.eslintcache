[{"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\reportWebVitals.js":"1","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\App.js":"2","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\chatform.js":"3","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Chatform.js":"4","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Chatstarter.js":"5","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Chatroom.js":"6","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\index.js":"7","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Selector.js":"8","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Gameform.js":"9","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Gamestarter.js":"10","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Gamelist.js":"11","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Gamewaitroom.js":"12"},{"size":362,"mtime":1609339434000,"results":"13","hashOfConfig":"14"},{"size":297,"mtime":1609545535850,"results":"15","hashOfConfig":"14"},{"size":1249,"mtime":1609541071025,"results":"16","hashOfConfig":"14"},{"size":1641,"mtime":1609619704739,"results":"17","hashOfConfig":"14"},{"size":642,"mtime":1609619705701,"results":"18","hashOfConfig":"14"},{"size":1848,"mtime":1609620276970,"results":"19","hashOfConfig":"14"},{"size":501,"mtime":1609593876076,"results":"20","hashOfConfig":"14"},{"size":813,"mtime":1609682101877,"results":"21","hashOfConfig":"14"},{"size":1139,"mtime":1609674893607,"results":"22","hashOfConfig":"14"},{"size":432,"mtime":1609682103949,"results":"23","hashOfConfig":"14"},{"size":3076,"mtime":1609714188507,"results":"24","hashOfConfig":"14"},{"size":424,"mtime":1609716755373,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1newcm6",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\reportWebVitals.js",[],"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\App.js",["54","55"],"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\chatform.js",["56"],"import React from 'react';\r\nimport { useFormik}  from 'formik'; \r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst chatform=(newUser) =>{\r\n  \r\n    const formik=useFormik({\r\n        initialValues:{\r\n           name:'',\r\n            id: uuidv4(),\r\n        },\r\n        validate: values=>{\r\n            let errors={};\r\n            if(!values.name){\r\n                errors.name=\"Pole name nie moze byc puste\"\r\n            }\r\n           \r\n           return errors\r\n        },\r\n    \r\n    onSubmit: values=>{\r\n        newUser(values)\r\n        formik.resetForm({\r\n            values: { name:'',id:uuidv4() }, \r\n          });\r\n    },\r\n    \r\n   \r\n    })\r\n    return (\r\n        <>\r\n        <form onSubmit={formik.handleSubmit} onReset={formik.handleReset}>\r\n        <div>\r\n        <div>\r\n            <label htmlFor=\"text\">TEXT</label>\r\n            <input id=\"text\" name=\"text\" type=\"text\" onChange={formik.handleChange} value={formik.values.name}\r\n            />\r\n            {formik.errors.name ? <div className='error'>{formik.errors.name}</div>: null}\r\n          </div>\r\n         \r\n          <div>\r\n            <button type=\"submit\">Submit</button>\r\n          </div>\r\n          </div>\r\n        </form>\r\n        </>\r\n      );\r\n    \r\n}\r\n\r\nexport default chatform","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Chatform.js",[],["57","58"],"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Chatstarter.js",[],"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Chatroom.js",["59","60"],"import React,{useEffect,useState} from 'react';\r\nimport uuidv4 from 'uuid';\r\nimport './Chatroom.css';\r\n const mqtt    = require('mqtt');\r\nconst Chatroom=({room,user}) => {\r\n  \r\n \r\n  const [connectionStatus, setConnectionStatus] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [recivedMessage,setRecivedMessage]=useState( `${user} Przywitaj się !!!`)\r\n  const [NewMessage,setNewMessage] =useState('');\r\n  const [Client, setClient] = useState(mqtt.connect('ws://10.45.3.14:8000/mqtt'));\r\n  useEffect(()=>{\r\n    \r\n    if(!connectionStatus){\r\n    setClient(mqtt.connect('ws://10.45.3.14:8000/mqtt'))\r\n    setConnectionStatus(true)\r\n    }\r\n  }, [])\r\n  useEffect(()=>{\r\n      if(room){\r\n    Client.subscribe(room)\r\n    }\r\n    \r\n  }, [room])\r\n  \r\n \r\n  useEffect(() => {\r\n   \r\n    Client.on('message', function (topic, messag) {\r\n     const wiadomosc = messag.toString();\r\n      setRecivedMessage(wiadomosc);    \r\n      });\r\n      \r\n  }, [Client])\r\n  useEffect(() => {\r\n   setMessages(prevState => [...prevState,recivedMessage])\r\n      \r\n  }, [recivedMessage])\r\n  let view=messages.map( (elem) =>( <div key={uuidv4()} >  {elem} </div>))\r\n \r\n    const ChangeHandler=(e)=>{setNewMessage(e.target.value)}\r\n    const sendMessage=(event)=>{\r\n      Client.publish(room.toString(),user+': '+NewMessage)\r\n      setNewMessage('')\r\n      event.preventDefault();\r\n\r\n\r\n    }\r\n    \r\n  return (\r\n    <div className=\"Chatroom\">\r\n    \r\n    <h1 className=\"title\"> Chat in room:   {room} </h1>\r\n        <h3>{view}</h3>\r\n        <h3><form onSubmit={sendMessage} >\r\n        <label className=\"ChatForm\">\r\n        Message:\r\n        <input type=\"text\" value={NewMessage} onChange={ChangeHandler} />\r\n          </label>\r\n          <input type=\"submit\" value=\"Send\" />\r\n        </form> </h3>\r\n       \r\n        </div>\r\n  );\r\n}\r\nexport default Chatroom;","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\index.js",[],"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Selector.js",[],"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Gameform.js",[],"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Gamestarter.js",[],"F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Gamelist.js",["61"],"import React, { useState, useEffect } from 'react';\r\nimport uuidv4 from 'uuid';\r\nimport Gamewaitroom from './Gamewaitroom'\r\nconst axios = require('axios');\r\n\r\nconst Gamelist = ({ user }) => {\r\n    \r\n    const [gameselect, setgameselect] = useState(<div>foooooo</div>)\r\n    const [select, setselect] = useState(false)\r\n    const [gamelist, setgamelist] = useState([])\r\n    const [Newgame, setNewgame] = useState('')\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3050/')\r\n            .then(function (response) {\r\n                setgamelist(response.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }, [])\r\n    function refresh() {\r\n        axios.get('http://localhost:3050/')\r\n            .then(function (response) {\r\n                setgamelist(response.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n    const ChangeHandler=(e)=>{setNewgame(e.target.value)}\r\n    const sendNewGame=(event)=>{\r\n        axios.post('http://localhost:3050/', {\r\n           id:Newgame\r\n          })\r\n          .then(function (response) {\r\n            if(response.data){\r\n                axios.get('http://localhost:3050/')\r\n            .then(function (response) {\r\n                setgamelist(response.data)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            })\r\n            }\r\n            else{\r\n                alert(`Gra o nazwie ${Newgame} już istnieje`)\r\n            }\r\n          })\r\n          .catch(function (error) {\r\n            console.log(error);\r\n          });\r\n      setNewgame('')\r\n      event.preventDefault();\r\n\r\n\r\n    }\r\n    function handlegameselect1(e){\r\n       //tutaj post na http?\r\n        setgameselect(<Gamewaitroom name={e} usernick={user} type={\"gamer\"}> </Gamewaitroom>)\r\n        setselect(true)\r\n    }\r\n    function handlegameselect2(e){\r\n        //tutaj post na http?\r\n         setgameselect(<Gamewaitroom name={e} usernick={user} type={\"viewer\"}> </Gamewaitroom>)\r\n         setselect(true)\r\n     }\r\n    let view = gamelist.map((elem) => (<div key={uuidv4()}  >  {elem} <button onClick={()=>handlegameselect1(elem)}>Join</button> <button onClick={()=>handlegameselect2(elem)}>View</button></div>))\r\n    const test=<div>Halko</div>\r\n        if(select){\r\n            return(\r\n            <div className=\"App\">\r\n            {gameselect}\r\n            </div>\r\n            )\r\n        }\r\n\r\n        else{\r\n            return (\r\n        <div className=\"App\">\r\n            <h1>Create New Game</h1>\r\n            <h3><form onSubmit={sendNewGame} >\r\n                <label className=\"ChatForm\">\r\n                    New Game Name:\r\n        <input type=\"text\" value={Newgame} onChange={ChangeHandler} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Add\" />\r\n            </form> </h3>\r\n            <h1 onClick={() => refresh()}>Game List</h1>\r\n            {view}\r\n            \r\n        </div>)\r\n        }\r\n    \r\n}\r\n\r\n\r\nexport default Gamelist;","F:\\projekt_protokoly\\Protokoly-sieci-Web\\main_app_front\\src\\components\\Gamewaitroom.js",["62","63"],{"ruleId":"64","severity":1,"message":"65","line":1,"column":16,"nodeType":"66","messageId":"67","endLine":1,"endColumn":24},{"ruleId":"64","severity":1,"message":"68","line":1,"column":25,"nodeType":"66","messageId":"67","endLine":1,"endColumn":34},{"ruleId":"69","severity":2,"message":"70","line":7,"column":18,"nodeType":"66","endLine":7,"endColumn":27},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":19,"column":6,"nodeType":"77","endLine":19,"endColumn":8,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"79","line":25,"column":6,"nodeType":"77","endLine":25,"endColumn":12,"suggestions":"80"},{"ruleId":"64","severity":1,"message":"81","line":68,"column":11,"nodeType":"66","messageId":"67","endLine":68,"endColumn":15},{"ruleId":"64","severity":1,"message":"65","line":1,"column":16,"nodeType":"66","messageId":"67","endLine":1,"endColumn":24},{"ruleId":"64","severity":1,"message":"82","line":2,"column":8,"nodeType":"66","messageId":"67","endLine":2,"endColumn":16},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/rules-of-hooks","React Hook \"useFormik\" is called in function \"chatform\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connectionStatus'. Either include it or remove the dependency array.","ArrayExpression",["85"],"React Hook useEffect has a missing dependency: 'Client'. Either include it or remove the dependency array.",["86"],"'test' is assigned a value but never used.","'Gameform' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [connectionStatus]",{"range":"91","text":"92"},"Update the dependencies array to be: [Client, room]",{"range":"93","text":"94"},[669,671],"[connectionStatus]",[756,762],"[Client, room]"]